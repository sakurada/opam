diff -ru why3-0.86.1/src/parser/parser.mly why3-0.86.1.new/src/parser/parser.mly
--- why3-0.86.1/src/parser/parser.mly	2015-05-21 10:51:40.000000000 +0200
+++ why3-0.86.1.new/src/parser/parser.mly	2015-09-23 12:20:10.836207542 +0200
@@ -10,7 +10,7 @@
 (********************************************************************)
 
 %{
-module Incremental = struct
+module WIncremental = struct
   let stack = Stack.create ()
   let open_file inc = Stack.push inc stack
   let close_file () = ignore (Stack.pop stack)
@@ -181,43 +181,43 @@
 
 open_file:
 (* Dummy token. Menhir does not accept epsilon. *)
-| EOF { Incremental.open_file }
+| EOF { WIncremental.open_file }
 
 logic_file:
-| theory* EOF   { Incremental.close_file () }
+| theory* EOF   { WIncremental.close_file () }
 
 program_file:
-| theory_or_module* EOF { Incremental.close_file () }
+| theory_or_module* EOF { WIncremental.close_file () }
 
 theory:
-| theory_head theory_decl* END  { Incremental.close_theory () }
+| theory_head theory_decl* END  { WIncremental.close_theory () }
 
 theory_or_module:
 | theory                        { () }
-| module_head module_decl* END  { Incremental.close_module () }
+| module_head module_decl* END  { WIncremental.close_module () }
 
 theory_head:
-| THEORY labels(uident)  { Incremental.open_theory $2 }
+| THEORY labels(uident)  { WIncremental.open_theory $2 }
 
 module_head:
-| MODULE labels(uident)  { Incremental.open_module $2 }
+| MODULE labels(uident)  { WIncremental.open_module $2 }
 
 theory_decl:
-| decl            { Incremental.new_decl  (floc $startpos $endpos) $1 }
-| use_clone       { Incremental.use_clone (floc $startpos $endpos) $1 }
+| decl            { WIncremental.new_decl  (floc $startpos $endpos) $1 }
+| use_clone       { WIncremental.use_clone (floc $startpos $endpos) $1 }
 | namespace_head theory_decl* END
-    { Incremental.close_namespace (floc $startpos($1) $endpos($1)) $1 }
+    { WIncremental.close_namespace (floc $startpos($1) $endpos($1)) $1 }
 
 module_decl:
-| decl            { Incremental.new_decl  (floc $startpos $endpos) $1 }
-| pdecl           { Incremental.new_pdecl (floc $startpos $endpos) $1 }
-| use_clone       { Incremental.use_clone (floc $startpos $endpos) $1 }
+| decl            { WIncremental.new_decl  (floc $startpos $endpos) $1 }
+| pdecl           { WIncremental.new_pdecl (floc $startpos $endpos) $1 }
+| use_clone       { WIncremental.use_clone (floc $startpos $endpos) $1 }
 | namespace_head module_decl* END
-    { Incremental.close_namespace (floc $startpos($1) $endpos($1)) $1 }
+    { WIncremental.close_namespace (floc $startpos($1) $endpos($1)) $1 }
 
 namespace_head:
 | NAMESPACE boption(IMPORT) uident
-   { Incremental.open_namespace $3.id_str; $2 }
+   { WIncremental.open_namespace $3.id_str; $2 }
 
 (* Use and clone *)
 
